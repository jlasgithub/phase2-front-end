{"ast":null,"code":"var _jsxFileName = \"/home/wasadmin/springBootProject/phase2-front-end/phase2-front-end/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport Display from './components/Display/Display.js';\nimport Input from './components/Input/Input.js';\nimport { returnsCustomers, post, put, deleteById } from './memdb.js';\nimport { useState, useEffect } from \"react\";\nimport frog from './frog.png';\nimport axios from 'axios';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  const REST_URL = 'http://localhost:8080/api/customers';\n  let blankCustomer = {\n    \"id\": -1,\n    \"name\": \"\",\n    \"email\": \"\",\n    \"password\": \"\"\n  };\n\n  //formObject is just to display inside text fields and applies to SELECT AND CANCEL\n  const [formObject, setFormObject] = useState(blankCustomer);\n  const [customers, setCustomers] = useState([]);\n  const [refresh, setRefresh] = useState(false); // state to trigger re-fetch\n\n  let mode = formObject.id >= 0 ? 'Update' : 'Add';\n\n  // run getCustomers (display) function whenever refresh state changes\n  useEffect(() => {\n    getCustomers();\n  }, [refresh]);\n  // when we want to refresh after some action, just place:\n  // setRefresh(!refresh);\n\n  function getNextId(people) {\n    let maxid = 0;\n    for (let item of people) {\n      maxid = item.id > maxid ? item.id : maxid;\n    }\n    return maxid + 1;\n  }\n  var nextId;\n\n  // const getCustomers =  function(){\n  //   setCustomers(returnsCustomers());\n  // }\n\n  const getCustomers = async () => {\n    try {\n      const response = await axios.get(`${REST_URL}`);\n      //console.log(response.data);\n      setCustomers(response.data);\n      nextId = getNextId(response.data);\n    } catch (error) {\n      console.error(\"error fetching customers: \", error);\n    }\n  };\n  const handleInputChange = function (event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    let newFormObject = {\n      ...formObject\n    };\n    newFormObject[name] = value;\n    setFormObject(newFormObject);\n  };\n\n  // nothing to do with API at all. just highlights displayed (already fetched) info\n  const handleListClick = function (item) {\n    if (formObject.id === item.id) {\n      setFormObject(blankCustomer);\n    } else {\n      setFormObject(item);\n    }\n  };\n\n  //commented part is what used to be there\n  let onSaveClick = async () => {\n    if (mode === 'Add') {\n      formObject.id = nextId;\n      //post(formObject);\n      try {\n        const response = await axios.post(`${REST_URL}`, formObject);\n      } catch (error) {\n        console.error(\"error fetching customers: \", error);\n      }\n    }\n    if (mode === 'Update') {\n      //put(formObject.id, formObject);\n      try {\n        const response = await axios.put(`${REST_URL}/${formObject.id}`, formObject);\n        console.log(\"true dat\");\n      } catch (error) {\n        console.error(\"error fetching customers: \", error);\n      }\n    }\n    setFormObject(blankCustomer);\n    setRefresh(!refresh);\n  };\n  let onCancelClick = function () {\n    setFormObject(blankCustomer);\n  };\n  let onDeleteClick = async () => {\n    if (formObject.id >= 0) {\n      //deleteById(formObject.id);\n      try {\n        const response = await axios.delete(`${REST_URL}/${formObject.id}`);\n        console.log(\"true dat\");\n      } catch (error) {\n        console.error(\"error fetching customers: \", error);\n      }\n    }\n    setRefresh(!refresh);\n    setFormObject(blankCustomer);\n  };\n  let pvars = {\n    mode: mode,\n    handleInputChange: handleInputChange,\n    formObject: formObject,\n    onDeleteClick: onDeleteClick,\n    onSaveClick: onSaveClick,\n    onCancelClick: onCancelClick\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pageTitle\",\n          children: \"Welcome to the CUSTOMER LOOKUP TABLE WHERE YOU CAN DO CUSTOMER LOOKUP FOR LOOKING UP CUSTOMERS IN THE CUSTOMER LOOKUP TABLE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Display, {\n              customers: customers,\n              formObject: formObject,\n              handleListClick: handleListClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              ...pvars\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"frog\",\n          src: frog,\n          alt: \"frog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yaX4Y1JISxLDcqYV8RrU9ykzG+g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Display","Input","returnsCustomers","post","put","deleteById","useState","useEffect","frog","axios","BrowserRouter","Routes","Route","jsxDEV","_jsxDEV","App","props","_s","REST_URL","blankCustomer","formObject","setFormObject","customers","setCustomers","refresh","setRefresh","mode","id","getCustomers","getNextId","people","maxid","item","nextId","response","get","data","error","console","handleInputChange","event","name","target","value","newFormObject","handleListClick","onSaveClick","log","onCancelClick","onDeleteClick","delete","pvars","Router","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","Login","src","alt","_c","$RefreshReg$"],"sources":["/home/wasadmin/springBootProject/phase2-front-end/phase2-front-end/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Display from './components/Display/Display.js';\nimport Input from './components/Input/Input.js';\nimport {returnsCustomers, post, put, deleteById } from './memdb.js'\nimport {useState, useEffect} from \"react\";\nimport frog from'./frog.png';\nimport axios from 'axios';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\n\nfunction App(props) {\n  const REST_URL = 'http://localhost:8080/api/customers';\n\n  let blankCustomer = { \"id\": -1, \"name\": \"\", \"email\": \"\", \"password\": \"\" };\n\n  //formObject is just to display inside text fields and applies to SELECT AND CANCEL\n  const [formObject, setFormObject] = useState(blankCustomer);\n  const [customers, setCustomers] = useState([]);\n  const [refresh, setRefresh] = useState(false); // state to trigger re-fetch\n\n  let mode = (formObject.id >= 0) ? 'Update' : 'Add';\n  \n  // run getCustomers (display) function whenever refresh state changes\n  useEffect(() => { \n    getCustomers(); \n  }, [refresh]);\n  // when we want to refresh after some action, just place:\n  // setRefresh(!refresh);\n\n  function getNextId(people){\n    let maxid = 0;\n    for( let item of people){\n      maxid = (item.id > maxid)?item.id:maxid;\n    }  \n    return maxid + 1;\n  }\n\n  var nextId;\n\n  // const getCustomers =  function(){\n  //   setCustomers(returnsCustomers());\n  // }\n\n\n  const getCustomers = async () => {\n    try {\n      const response = await axios.get(`${REST_URL}`);\n      //console.log(response.data);\n      setCustomers(response.data);\n      nextId = getNextId(response.data);\n      } catch(error){\n          console.error(\"error fetching customers: \", error);}\n    }\n\n\n  \n  const handleInputChange = function (event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    let newFormObject = {...formObject}\n    newFormObject[name] = value;\n    setFormObject(newFormObject);\n  }\n\n\n  // nothing to do with API at all. just highlights displayed (already fetched) info\n  const handleListClick = function(item){\n    if(formObject.id === item.id){\n      setFormObject(blankCustomer);\n    }else{\n      setFormObject(item);\n    }\n  }  \n\n//commented part is what used to be there\n  let onSaveClick = async () =>  {\n    if (mode === 'Add') {\n      formObject.id = nextId;\n      //post(formObject);\n      try {\n        const response = await axios.post(`${REST_URL}`, formObject);\n        } catch(error){\n            console.error(\"error fetching customers: \", error);}\n    }\n    if (mode === 'Update') {\n      //put(formObject.id, formObject);\n      try {\n        const response = await axios.put(`${REST_URL}/${formObject.id}`, formObject);\n        console.log(\"true dat\");\n      } catch(error){\n            console.error(\"error fetching customers: \", error);}\n    }\n    setFormObject(blankCustomer);\n    setRefresh(!refresh);\n  }\n\n  let onCancelClick = function () {\n    setFormObject(blankCustomer);\n  }\n\n  let onDeleteClick = async () => {\n    if(formObject.id >= 0){\n      //deleteById(formObject.id);\n      try {\n        const response = await axios.delete(`${REST_URL}/${formObject.id}`);\n        console.log(\"true dat\");\n      } catch(error){\n            console.error(\"error fetching customers: \", error);}\n    }\n    setRefresh(!refresh); \n    setFormObject(blankCustomer);\n  }\n  let pvars = {\n    mode: mode,\n    handleInputChange: handleInputChange,\n    formObject: formObject,\n    onDeleteClick: onDeleteClick,\n    onSaveClick: onSaveClick,\n    onCancelClick: onCancelClick\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"pageTitle\">\n            Welcome to the CUSTOMER LOOKUP TABLE WHERE YOU CAN DO CUSTOMER LOOKUP FOR LOOKING UP CUSTOMERS IN THE CUSTOMER LOOKUP TABLE\n          </div>\n        </header>\n        <Routes>\n          <Route path=\"/\" element={\n            <div>\n              <Display \n                customers={customers}\n                formObject={formObject}\n                handleListClick={handleListClick}\n              />\n              <Input {...pvars} />\n            </div>\n          } />\n          <Route path=\"/login\" element={<Login />} />\n        </Routes>\n        <footer>\n          <img id=\"frog\" src={frog} alt=\"frog\" />\n        </footer>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}